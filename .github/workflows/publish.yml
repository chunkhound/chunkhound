name: Publish to PyPI

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

env:
  UV_CACHE_DIR: /tmp/.uv-cache

jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv python install

      - name: Install dependencies
        run: uv sync --locked --dev

      - name: Run tests before build
        run: |
          uv run pytest tests/ -v --tb=short
        env:
          OPENAI_API_KEY: "test-key-for-ci"
          CHUNKHOUND_WATCH_ENABLED: "false"

      - name: Build package
        run: |
          # Enable bytecode compilation for better performance
          UV_COMPILE_BYTECODE=1 uv build
          
      - name: Verify build artifacts
        run: |
          ls -la dist/
          # Check that we have both wheel and source distribution
          test -f dist/*.whl
          test -f dist/*.tar.gz
          echo "Build artifacts verified successfully"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          retention-days: 90

  publish-to-pypi:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/chunkhound
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Publish to PyPI
        run: |
          uv publish --trusted-publishing always
        env:
          UV_PUBLISH_URL: https://upload.pypi.org/legacy/

  publish-to-testpypi:
    name: Publish to TestPyPI (Pre-release)
    if: github.event_name == 'release' && github.event.release.prerelease
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/chunkhound
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Publish to TestPyPI
        run: |
          uv publish --trusted-publishing always
        env:
          UV_PUBLISH_URL: https://test.pypi.org/legacy/

  github-release:
    name: Create GitHub Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build, publish-to-pypi]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Extract release notes
        id: extract-notes
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Create release notes
          cat > RELEASE_NOTES.md << EOF
          # ChunkHound v$VERSION
          
          ## Installation
          
          \`\`\`bash
          pip install chunkhound==$VERSION
          # or with uv
          uv add chunkhound==$VERSION
          \`\`\`
          
          ## What's New
          
          See [CHANGELOG.md](https://github.com/chunkhound/chunkhound/blob/main/CHANGELOG.md) for detailed changes.
          
          ## Verification
          
          This release has been automatically built and tested across Python 3.10-3.13.
          
          - 🔍 **Core Features**: Semantic and regex code search
          - 🗄️ **Database**: DuckDB with VSS extension
          - 🔌 **Integration**: MCP server for IDE integration  
          - 🚀 **Performance**: Signal-based process coordination
          - 📝 **Languages**: Python, Java, Markdown indexing
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: RELEASE_NOTES.md
          files: |
            dist/*.whl
            dist/*.tar.gz
          draft: false
          prerelease: ${{ github.event.release.prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  post-release:
    name: Post-Release Tasks
    if: startsWith(github.ref, 'refs/tags/v') && needs.publish-to-pypi.result == 'success'
    needs: [publish-to-pypi, github-release]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create post-release issue
        uses: actions/github-script@v7
        with:
          script: |
            const version = context.ref.replace('refs/tags/v', '');
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Post-release tasks for v${version}`,
              body: `## Post-Release Checklist for v${version}
              
              - [ ] Verify package is available on [PyPI](https://pypi.org/project/chunkhound/${version}/)
              - [ ] Test installation: \`pip install chunkhound==${version}\`
              - [ ] Update documentation if needed
              - [ ] Announce release in relevant channels
              - [ ] Monitor for any installation issues
              
              **Release Details:**
              - Tag: v${version}
              - Commit: ${context.sha}
              - Release: ${context.payload.head_commit?.message || 'Manual release'}
              
              This issue was created automatically by the release workflow.`,
              labels: ['release', 'post-release-tasks']
            });