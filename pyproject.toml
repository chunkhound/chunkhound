[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "chunkhound"
version = "0.1.0"
description = "Local-first semantic code search with vector and regex capabilities"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "ChunkHound Team"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Indexing",
]
dependencies = [
    "duckdb>=0.8.0",
    "openai>=1.0.0",
    "tree-sitter>=0.20.0",
    "tree-sitter-python>=0.20.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "loguru>=0.6.0",
    "fastmcp>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
]

[project.scripts]
chunkhound = "chunkhound.cli:main"

[project.urls]
Homepage = "https://github.com/chunkhound/chunkhound"
Repository = "https://github.com/chunkhound/chunkhound"
Issues = "https://github.com/chunkhound/chunkhound/issues"

[tool.hatch.build.targets.wheel]
packages = ["chunkhound"]

[tool.black]
line-length = 88
target-version = ["py38"]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
]
ignore = []

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]